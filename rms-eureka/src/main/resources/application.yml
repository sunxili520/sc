#单个注册中心配置
#server:
#  port: 9080
#instance:
#    hostname: localhost
#eureka:
#  client:
#    #不从eureka server获取注册信息
#    fetch-registry: false
#    #不将该服务注册到eureka server，因为这里代表的eureka本身
#    #如果不配置false默认会去注册，但不能自己注册自己
#    register-with-eureka: false
#    #客户端与eureka服务端交互的地址
#    service-url:
#      defaultZone: http://${instance.hostname}:${server.port}/eureka
#  #注意，线上必须开启自我保护，去掉下面的配置即可。
#  server:
#    #是否开启注册中心自我保护机制，开发的时候关闭
#    #自我保护机制- 服务注册后，每隔30S会发次心跳，告诉注册中心服务健康，如果超过90s还没发将被服务删除
#    #注册中心也会检测是否自己网络坏了，如果15分钟失败率超过85%将不会自我保护
#    #注册中心很长的红色字就是自我保护的提示
#    enable-self-preservation: false
#    #删除服务间隔3秒（3s连不上删除注册服务）
#    eviction-interval-timer-in-ms: 3000

#集群注册中心配置，防止注册中心挂了，整个应用都挂了
spring:
  application:
    name: eureka-server
---
spring:
  profiles: eurekaServer1
server:
  port: 9080
eureka:
  instance:
    #如果用localhost访问地址，需要定义hostname名称
    #如果是ip这个可以注释掉，比如http://127.0.0.1:9081/eureka
    hostname: localhost1
    #指向上面定义的application name
    appname: eureka-server
    #以下保护机制时间设置，enable-self-preservation
    #间隔多少秒去抓取服务列表
    #lease-renewal-interval-in-seconds: 30
    #每个30秒（默认）会执行一次心跳（客户端-注册中心）（交互2次，发送和接收）
    #3次（90）都失败的话，服务将被注册中心抛弃
    #lease-expiration-duration-in-seconds: 90
  client:
    service-url:
      #互相注册，注意端口9081是下面eurekaServer2的端口
      defaultZone: http://localhost:9081/eureka
  server:
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 3000
---
spring:
  profiles: eurekaServer2
server:
  port: 9081
eureka:
  instance:
    #如果用localhost访问地址，需要定义hostname名称，如果是ip这个可以注释掉
    hostname: localhost2
    #指向上面定义的application name
    appname: eureka-server
    #lease-renewal-interval-in-seconds: 30
    #lease-expiration-duration-in-seconds: 90
  client:
    service-url:
      #互相注册，注意端口9080是上面eurekaServer1的端口
      defaultZone: http://localhost:9080/eureka
  server:
      enable-self-preservation: false
      eviction-interval-timer-in-ms: 3000